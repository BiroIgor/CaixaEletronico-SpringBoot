package br.com.Igor.caixaeletronico.config;

import io.swagger.v3.oas.models.OpenAPI;
import io.swagger.v3.oas.models.info.Contact;
import io.swagger.v3.oas.models.info.Info;
import io.swagger.v3.oas.models.info.License;
import io.swagger.v3.oas.models.servers.Server;
import org.springframework.context.annotation.Bean;
import org.springframework.context.annotation.Configuration;

import java.util.List;

/**
 * üìö CONFIGURA√á√ÉO DO SWAGGER/OPENAPI 3
 * 
 * Esta classe configura a documenta√ß√£o autom√°tica das APIs
 * Acesse: http://localhost:8080/swagger-ui.html
 */
@Configuration
public class SwaggerConfig {

    @Bean
    public OpenAPI customOpenAPI() {
        return new OpenAPI()
                .info(new Info()
                        .title("üè¶ Sistema Caixa Eletr√¥nico - API REST")
                        .version("2.0.0")
                        .description("""
                                ## üìã Sistema Banc√°rio Completo
                                
                                Esta API oferece opera√ß√µes banc√°rias completas com:
                                
                                ### ‚úÖ Funcionalidades Principais:
                                - **CRUD Completo** de contas banc√°rias
                                - **Opera√ß√µes Financeiras**: Dep√≥sito, Saque, Consulta de saldo
                                - **Valida√ß√µes Autom√°ticas**: CPF, valores, saldo
                                - **Persist√™ncia JPA**: Banco H2 em mem√≥ria
                                - **Arquitetura em Camadas**: Controller ‚Üí Service ‚Üí Repository
                                
                                ### üîß Tecnologias:
                                - Spring Boot 3.1.0
                                - Spring Data JPA
                                - H2 Database
                                - Bean Validation
                                - BigDecimal (precis√£o monet√°ria)
                                
                                ### üìä Endpoints Dispon√≠veis:
                                - **API v1**: `/api/contas` - Vers√£o b√°sica
                                - **API v2**: `/api/v2/contas` - Vers√£o avan√ßada com respostas estruturadas
                                
                                ### üíæ Console H2:
                                - URL: http://localhost:8080/h2-console
                                - JDBC: `jdbc:h2:mem:caixadb`
                                - User: `sa` | Password: *(vazio)*
                                """)
                        .contact(new Contact()
                                .name("Igor - Desenvolvedor")
                                .email("igor@exemplo.com")
                                .url("https://github.com/igor"))
                        .license(new License()
                                .name("MIT License")
                                .url("https://opensource.org/licenses/MIT")))
                .servers(List.of(
                        new Server()
                                .url("http://localhost:8080")
                                .description("Servidor Local de Desenvolvimento"),
                        new Server()
                                .url("https://api.caixaeletronico.com")
                                .description("Servidor de Produ√ß√£o (Exemplo)")));
    }
}
